1.1
UPDATE consignment_volumes
SET length = length * 39.37,
    breadth = breadth * 39.37,
    height = height * 39.37;
Data Cleaning: Check for missing values, inconsistencies, and duplicates. For unit conversions, use SQL functions to standardize measurements. For example, converting dimensions to inches could be done with:
Calculating Density (CFT): Calculate the density in cubic feet (CFT) using:
SELECT 
    consignment_id,
    (length * breadth * height) / 1728 AS total_cft  -- Adjust for conversion
FROM 
    consignment_volumes;

-- Step 1.2 Bivariate Analysis
-- Analyzing the relationship between CFT and Weight

SELECT 
    c.client_id,  -- Assuming client_id is in the consignment table
    AVG(total_cft) AS avg_cft,
    AVG(c.weight) AS avg_weight  -- Explicitly referencing the weight from the consignment table
FROM (
    SELECT 
        cv.consignment_id,
        SUM(cv.length * cv.breadth * cv.height) / 1728 AS total_cft,
        c.weight  -- Ensuring we're pulling from the correct table
    FROM 
        consignment_volumes cv
    JOIN 
        consignment c ON c.id = cv.consignment_id
    GROUP BY 
        cv.consignment_id, c.weight
) AS CFT_Data
JOIN consignment c ON CFT_Data.consignment_id = c.id
GROUP BY 
    c.client_id;


-- Step 1.3.1: Calculate CFT for each consignment
SELECT 
    cv.consignment_id,
    SUM(cv.length * cv.breadth * cv.height) / 1728 AS total_cft  -- Calculate CFT
FROM 
    consignment_volumes cv
GROUP BY 
    cv.consignment_id;
-- Step 1.3.2: Summarize CFT values at the client level
SELECT 
    c.client_id,
    AVG(total_cft) AS avg_cft,
    MAX(total_cft) AS max_cft,
    MIN(total_cft) AS min_cft,
    PERCENTILE_CONT(0.50) WITHIN GROUP (ORDER BY total_cft) AS median_cft,  -- 50th percentile
    PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY total_cft) AS p75_cft  -- 75th percentile
FROM (
    SELECT 
        cv.consignment_id,
        SUM(cv.length * cv.breadth * cv.height) / 1728 AS total_cft
    FROM 
        consignment_volumes cv
    GROUP BY 
        cv.consignment_id
) AS CFT_Data
JOIN consignment c ON CFT_Data.consignment_id = c.id
GROUP BY 
    c.client_id;

-- Step 1.3.3: Summarize CFT values at the industry level
SELECT 
    c.industry_type,  -- Updated to use industry_type from the consignment table
    AVG(CFT_Data.total_cft) AS avg_cft,  -- Average CFT value
    MAX(CFT_Data.total_cft) AS max_cft,  -- Maximum CFT value
    MIN(CFT_Data.total_cft) AS min_cft,  -- Minimum CFT value
    PERCENTILE_CONT(0.50) WITHIN GROUP (ORDER BY CFT_Data.total_cft) AS median_cft,  -- 50th percentile (median)
    PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY CFT_Data.total_cft) AS p75_cft  -- 75th percentile
FROM (
    -- Subquery to calculate total CFT for each consignment
    SELECT 
        cv.consignment_id,
        SUM(cv.length * cv.breadth * cv.height) / 1728 AS total_cft  -- Conversion from cubic inches to CFT
    FROM 
        consignment_volumes cv
    GROUP BY 
        cv.consignment_id
) AS CFT_Data
JOIN 
    consignment c ON CFT_Data.consignment_id = c.id  -- Ensure to join with the correct key
GROUP BY 
    c.industry_type;  -- Group by the industry type to summarize CFT


-- Step 1.4. Calculate Q1, Q3, and IQR for CFT
WITH CFT_Stats AS (
    SELECT 
        PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY total_cft) AS q1,
        PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY total_cft) AS q3
    FROM (
        SELECT 
            cv.consignment_id,
            SUM(cv.length * cv.breadth * cv.height) / 1728 AS total_cft
        FROM 
            consignment_volumes cv
        GROUP BY 
            cv.consignment_id
    ) AS CFT_Data
)

SELECT 
    q1,
    q3,
    (q3 - q1) AS iqr,
    (q1 - 1.5 * (q3 - q1)) AS lower_limit,
    (q3 + 1.5 * (q3 - q1)) AS upper_limit
FROM CFT_Stats;



